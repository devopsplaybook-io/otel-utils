name: Main Build

on:
  push:
    branches: ["main"]

  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint || echo "No lint script found, skipping"

      - name: Run tests
        run: npm test || echo "No test script found, skipping"

      - name: Build package
        run: npm run build

  publish-release:
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for version comparison

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check if version changed
        id: version-check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

          # Check if this version exists on npm
          if npm view @devopsplaybook.io/otel-utils@${CURRENT_VERSION} version &> /dev/null; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
            echo "Version ${CURRENT_VERSION} already exists on npm"
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
            echo "Version ${CURRENT_VERSION} is new, will publish"
          fi

      - name: Publish release package
        if: steps.version-check.outputs.version-exists == 'false'
        run: |
          echo "Publishing version ${{ steps.version-check.outputs.current-version }}"
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.version-check.outputs.version-exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v${{ steps.version-check.outputs.current-version }} -m "Release v${{ steps.version-check.outputs.current-version }}"
          git push origin v${{ steps.version-check.outputs.current-version }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.version-exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current-version }}
          release_name: Release v${{ steps.version-check.outputs.current-version }}
          draft: false
          prerelease: false
          body: |
            ## Release v${{ steps.version-check.outputs.current-version }}

            **Package**: `@devopsplaybook.io/otel-utils@${{ steps.version-check.outputs.current-version }}`

            Install with:
            ```bash
            npm install @devopsplaybook.io/otel-utils@${{ steps.version-check.outputs.current-version }}
            # or for latest
            npm install @devopsplaybook.io/otel-utils
            ```

            ### Changes
            This release includes all changes merged since the previous version.

      - name: Skip publish - version exists
        if: steps.version-check.outputs.version-exists == 'true'
        run: |
          echo "⚠️  Version ${{ steps.version-check.outputs.current-version }} already exists on npm."
          echo "To publish a new version, update the version in package.json first."
